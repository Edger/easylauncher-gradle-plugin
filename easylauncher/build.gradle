import org.jetbrains.kotlin.gradle.dsl.KotlinCompile
import org.jetbrains.kotlin.gradle.dsl.KotlinVersion

plugins {
    id "java-gradle-plugin"
    id 'com.starter.publishing'
    alias(libs.plugins.starter.library.kotlin)
    alias(libs.plugins.gradle.publishplugin)
    alias(libs.plugins.droidsonroids.jacocotestkit)
    alias(libs.plugins.kotlinx.binarycompatibility)
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
    }
    doLast {
        Thread.sleep(2000) // https://github.com/gradle/gradle/issues/16603
    }
}

description = 'Set of plugins that might be useful for Multi-Module Android projects.'

gradlePlugin {
    plugins {
        quality {
            id = 'com.starter.easylauncher'
            displayName = 'Automatically customizes Android laucher icon per each build variant'
            description = project.description
            tags.addAll(['android', 'launcher', "flavor", "buildType"])
            implementationClass = 'com.project.starter.easylauncher.plugin.EasyLauncherPlugin'
        }
    }
}

configurations {
    testRuntimeDependencies.extendsFrom compileOnly
}

tasks.withType(PluginUnderTestMetadata).configureEach {
    pluginClasspath.from(configurations.testRuntimeDependencies)
}

tasks.withType(KotlinCompile).configureEach {
    compilerOptions {
        apiVersion = KotlinVersion.KOTLIN_1_8
        languageVersion = KotlinVersion.KOTLIN_1_8
    }
}
kotlin {
    jvmToolchain(21)
}

dependencies {
    implementation("org.codehaus.groovy:groovy-xml:${GroovySystem.getVersion()}")
    runtimeOnly(libs.usefulness.webp)
    compileOnly(libs.agp.gradle)

    testImplementation gradleTestKit()
    testImplementation(libs.junit.jupiter)
    testImplementation(libs.assertj.core)
    testImplementation(libs.junit.jupiter.params)
    testImplementation(libs.apache.commons.lang3)
}
